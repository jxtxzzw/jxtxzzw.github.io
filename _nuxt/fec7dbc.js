(window.webpackJsonp=window.webpackJsonp||[]).push([[25,3],{1554:function(t,e,r){"use strict";r.r(e);r(150),r(858),r(120),r(86),r(121),r(122),r(109),r(103),r(134);var n=r(426);function o(t,e){var r;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(r=function(t,e){if(!t)return;if("string"==typeof t)return l(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return l(t,e)}(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var i=0,n=function(){};return{s:n,n:function(){return i>=t.length?{done:!0}:{done:!1,value:t[i++]}},e:function(t){throw t},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,d=!0,c=!1;return{s:function(){r=t[Symbol.iterator]()},n:function(){var t=r.next();return d=t.done,t},e:function(t){c=!0,o=t},f:function(){try{d||null==r.return||r.return()}finally{if(c)throw o}}}}function l(t,e){(null==e||e>t.length)&&(e=t.length);for(var i=0,r=new Array(e);i<e;i++)r[i]=t[i];return r}var d={name:"DreamItem",props:{dreams:{type:Array,default:function(){return[]}}},data:function(){return{dreamEntry:n.dreamEntry,dreamCascade:n.dreamCascade,dreamProgress:n.dreamProgress,dreamProgressRelation:n.dreamProgressRelation}},methods:{getProgress:function(t){var e,r=[],n=o(this.dreamProgressRelation);try{for(n.s();!(e=n.n()).done;){var l=e.value;l.dream_id===t.id&&r.push(l.progress_id)}}catch(t){n.e(t)}finally{n.f()}var d,progress=[],c=o(this.dreamProgress);try{for(c.s();!(d=c.n()).done;){var p=d.value;r.includes(p.id)&&progress.push(p)}}catch(t){c.e(t)}finally{c.f()}return progress.sort((function(a,b){return null!==a.date&&null!==b.date?a.date!==b.date?new Date(a.date)-new Date(b.date):a.id-b.id:null===a.date&&null!==b.date?1:null!==a.date&&null===b.date?-1:a.id-b.id})),progress},getCurrentProgressInScope:function(t){var progress=this.getProgress(t);for(var i in progress)if(progress[i].id===t.current_progress)return i;return-1},getChildren:function(t){var e,r=new Map,n=o(this.dreamEntry);try{for(n.s();!(e=n.n()).done;){var l=e.value;r.set(l.id,l)}}catch(t){n.e(t)}finally{n.f()}var d,c=[],f=o(this.dreamCascade);try{for(f.s();!(d=f.n()).done;){var m=d.value;m.parent_dream_id===t.id&&c.push(r.get(m.dream_id))}}catch(t){f.e(t)}finally{f.f()}return c}}},c=r(147),component=Object(c.a)(d,(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("Collapse",{attrs:{simple:""}},t._l(t.dreams,(function(e){return r("Panel",{key:e.id,attrs:{name:""+e.id}},[t._v("\n    "+t._s(e.name)+"\n    "),r("span",{attrs:{slot:"content"},slot:"content"},[r("span",[t._v("\n        "+t._s(e.content)+"\n      ")]),t._v(" "),null!==e.estimated_progress?r("Progress",{attrs:{percent:e.estimated_progress,"stroke-color":["#108ee9","#87d068"],status:"active"}}):t._e(),t._v(" "),-1!==t.getCurrentProgressInScope(e)?r("a-steps",{attrs:{size:"small",direction:"vertical",current:t.getCurrentProgressInScope(e)}},t._l(t.getProgress(e),(function(e){return r("a-step",{key:e.id,attrs:{status:e.status}},[r("span",{attrs:{slot:"title"},slot:"title"},[t._v(t._s(e.title)+" ")]),t._v(" "),r("span",{attrs:{slot:"subTitle"},slot:"subTitle"},[t._v(" "+t._s(e.date)+" ")]),t._v(" "),r("span",{attrs:{slot:"description"},slot:"description"},[t._v(" "+t._s(e.description)+" ")])])})),1):t._e(),t._v(" "),r("DreamItem",{attrs:{dreams:t.getChildren(e)}})],1)])})),1)}),[],!1,null,null,null);e.default=component.exports;installComponents(component,{DreamItem:r(1554).default})},1605:function(t,e,r){"use strict";r.r(e);r(166),r(150),r(122),r(86),r(109),r(103),r(134),r(120),r(121);var n=r(426);function o(t,e){var r;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(r=function(t,e){if(!t)return;if("string"==typeof t)return l(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return l(t,e)}(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var i=0,n=function(){};return{s:n,n:function(){return i>=t.length?{done:!0}:{done:!1,value:t[i++]}},e:function(t){throw t},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,d=!0,c=!1;return{s:function(){r=t[Symbol.iterator]()},n:function(){var t=r.next();return d=t.done,t},e:function(t){c=!0,o=t},f:function(){try{d||null==r.return||r.return()}finally{if(c)throw o}}}}function l(t,e){(null==e||e>t.length)&&(e=t.length);for(var i=0,r=new Array(e);i<e;i++)r[i]=t[i];return r}var d={name:"Dream",components:{DreamItem:r(1554).default},data:function(){return{dreamEntry:n.dreamEntry,dreamCascade:n.dreamCascade,dreamsIDWithParent:[],dreamsShouldShow:[]}},mounted:function(){this.prepareData()},methods:{prepareData:function(){var t,e=o(this.dreamCascade);try{for(e.s();!(t=e.n()).done;){var r=t.value;this.dreamsIDWithParent.includes(r.dream_id)||this.dreamsIDWithParent.push(r.dream_id)}}catch(t){e.e(t)}finally{e.f()}var n,l=o(this.dreamEntry);try{for(l.s();!(n=l.n()).done;){var d=n.value;this.dreamsIDWithParent.includes(d.id)||this.dreamsShouldShow.push(d)}}catch(t){l.e(t)}finally{l.f()}}}},c=d,f=r(147),component=Object(f.a)(c,(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",[r("DreamItem",{attrs:{dreams:t.dreamsShouldShow}})],1)}),[],!1,null,null,null);e.default=component.exports;installComponents(component,{DreamItem:r(1554).default})}}]);